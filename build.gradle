
plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'application'
	//id 'distribution'
}

group 'io.turntabl'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

run{
	standardInput = System.in
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

task fatJar(type: Jar) {
	manifest {
		attributes 'Implementation-Title': 'Gradle Jar File Example',
				'Implementation-Version': version,
				'Main-Class': 'io.turntabl.Main'
	}
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

//this will build a start script in
tasks.startScripts {
	doLast {
		def scriptFile = file "${outputDir}/${applicationName}"
		scriptFile.text = scriptFile.text.replace('CLASSPATH=$APP_HOME/lib', 'CLASSPATH=$APP_HOME/libs')
	}
}

application {
	mainClassName = 'io.turntabl.cli.CliApplication'
}

jar {
	manifest {
		attributes(
				'Implementation-Title': 'TLC Management System',
				'Implementation-Version': version,
				'Main-Class': 'io.turntabl.cli.CliApplication'
		)
	}
}

